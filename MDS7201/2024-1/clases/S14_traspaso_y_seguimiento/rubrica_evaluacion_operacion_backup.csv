Id;Pregunta;1;2;3;4;5
1;Cuánto tiempo demoró hacer clone?;Más de 10 minutos;Entre 2 y 10 minutos;Entre 30 segundos y 2 minutos;Entre 10 segundos y 30 segundos;Menos de 10 segundos
2;En el canvas, está explicado de qué se trata el proyecto?;No existe canvas;Existe un canvas pero desactualizado o deficiente;Existe canvas suficiente para entender lo básico, pero podría estar mejor explicado;El canvas es muy bueno y claro ;El canvas es muy bueno, claro e incluye información adicional relevante para el entendimiento del proyecto.
3;El README.md tenía toda la información necesaria para entender cómo ejecutar el proyecto?;No especifica cómo ejecutar el proyecto;Dice donde ejecutar el proyecto, pero está desactualizado o incorrecto;Dice donde ejecutar el proyecto pero no es totalmente claro qué pipeline usar. Después de probar un par de veces, encuentran el pipeline correcto.;Dice donde ejecutar el proyecto y funciona;Dice donde ejecutar el proyecto y funciona. Además, tiene información que apoya a la ejecución. 
4;"Fue fácil cambiar el código a ""modo_de_prueba""? (""modo_de_prueba"" debería ser una rama que tenga todo listo para hacer una prueba rápida del proyecto";No existe rama modo_de_prueba;Existe rama modo_de_prueba o analoga pero no funciona. ;Existe rama modo_de_prueba o analoga, el código funciona, pero hay que adaptar algunas rutas, o variables u otros antes de hacerlo funcionar. ;Existe rama modo_de_prueba o analoga, el código funciona;Existe rama modo_de_prueba o analoga, el código funciona. Además, tiene información adicional que apoya la ejecución o entendimiento. Esto puede estar en los READMEs global o de pipeline o en los comentarios de commit. 
5;Usa estructura de carpetas basada en el proyecto template_analytics? (Las carpetas adicionales están correctas siempre y cuando las base existan);No usa para nada estructura de carpetas de la comunidad;Usa la estructura de carpetas pero desactualizada o incompleta. ;Usa la estructura de carpetas actualizada pero hay archivos que deberían ir claramente en otra parte. ;Usa la estructura de carpetas actualizada y todos los archivos están donde tiene sentido que estén.;Usa la estructura de carpetas actualizada, todos los archivos están donde tiene sentido que estén.  Además, la estructura está adaptada al proyecto con nuevas carpetas o subcarpetas cuando es necesario. 
6;Usa estructura de archivos?;No usa la estructura de archivos;Usa la estructura de archivos pero desactualizada o incompleta. ;Usa la estructura de archivos actualizada pero hay archivos que deberían tener ID único y no lo tienen. (sobretodo en las carpetas preprocessing, models, prediction, pipelines);Usa la estructura de archivos actualizada y todos los archivos de preprocessing, models, prediction y pipelines tienen IDs únicos.;Usa la estructura de archivos actualizada y todos los archivos de preprocessing, models, prediction y pipelines tienen IDs únicos. Además, las carpetas insight, reports u otras tienen archivos con IDs únicos.
7;Fue claro qué pipeline tenías que correr?;No pude encontrar el pipeline que tenía que correr;Encontré el pipeline que tenía que correr después más de 10 minutos solo buscando eso, porque la información no estaba donde debía.;Encontré rápidamente el pipeline que tenía que correr, pero no entendí bien cómo ejecutarlo.;Encontré rápidamente el pipeline que tenía que correr y entendí bien cómo ejecutarlo.;Encontré rápidamente el pipeline que tenía que correr y entendí bien cómo ejecutarlo. Además, estaba a mano el código necesario para ejecutarlo.
8;Fue claro qué librerías instalar de ser necesario, ya sea en un renv, requirements.txt de python u otro?;No pude instalar las librerías que necesitaba;Pude instalar las librerías que necesitaba, pero no había documentación. Tuve que revisar caso a caso.;"Pude instalas las librerías necesarias, estaban documentadas en renv o requirements.txt u otro; pero la lista estaba desactualizada y tuve que solucionar problemas puntuales.";Pude instalas las librerías necesarias, estaban documentadas en renv o requirements.txt u otro. La lista estaba actualizada.;No necesité hacer nada con las librerías, ya que el proyecto estaba dockerizado, listo para ejecutarse. 
9;Te facilitaron oportunamente todas las credenciales necesarias para ejecutar los códigos?;No me pasaron ninguna contraseña.;Me pasaron contraseñas erradas.;Me pasaron contraseñas correctas, pero no todas;Todas las contraseñas que me pasaron me funcionaron.;Me pasaron las contraseñas en un .Renviron y/o codigo para poner en mi .bashrc, o ya estaban dentro de un docker. 
10;Está correctamente modularizado?;Todo el código está en un mismo archivo.;El código está separado en varios archivos pero sin una estructura clara.;El código está separado en varios archivos con estructura clara, pero cada archivo no tiene separaciones.;El código está separado en varios archivos con estructura clara y cada archivo a su vez, está separado en secciones con objetivos claros.;El código está separado en varios archivos con estructura clara y cada archivo a su vez, está separado en secciones con objetivos claros. Además, se nota que si uno quisiese agregar una nueva sección de preproceso o cambiar el tipo de modelo (u otro tipo de acciones similares), sería fácil integrarla al código ya existente entre dos scripts.
11;Usa nombres descriptivos de variables?;Los nombres de las variables no se entrienden para nada.;Hay un esfuero por poner nombres descriptivos, pero falla en ejecución, porque en verdad no se entienden tanto. ;Los nombres de las variables son descriptivos y se entienden, pero hay varias que requieren comentarios para aclarar a qué se refiere (no el por qué). ;Los nombres de las variables son descriptivos y entendibles sin necesidad de comentarios.;Los nombres de las variables son descriptivos y entendibles sin necesidad de comentarios. Además, los nombres son consistentes a lo largo de todo el proyecto. Por ejemplo, si una variable se llamaba fecha_evaluacion en un archivo, mantiene ese nombre para en mismo valor en otros archivos y no cambia a, por ejemplo, fecha_de_evaluacion.
12;Comenta los códigos necesarios?;No existen comentarios;Hay comentarios desactualizados que inducen a errores, probablemente debido al exceso de comentarios previos.;Hay comentarios y no parece haber información desactualizada en ellos, sin embargo, sigue habiendo exceso de comentarios, explicando codigo que está claro con los nombres.;"Hay comentarios y no parece haber información desactualizada en ellos. La gran mayoría de los comentarios se centran en el ""por qué"" de las cosas y no en el ""qué"", lo que hace que no haya muchos comentarios redundantes. ";"Hay comentarios y no parece haber información desactualizada en ellos. La gran mayoría de los comentarios se centran en el ""por qué"" de las cosas y no en el ""qué"", lo que hace que no haya muchos comentarios redundantes. Además, no existe código comentado que uno podría decir ""esto lo tengo que descomentar y ejecutar o no?"""
13;Hace buen uso de las funciones?;No existen funciones;Existen funciones, pero se definen en lugares inadecuados (función que se ocupa en varios scripts, se define en ambos scripts de manera redundante, por ejemplo);Existen funciones y no hay redundancias en definiciones de funciones, pero no es muy claro lo que hacen ni tienen un nombre descriptivo. O se crean funciones que redundantes ya que hay funciones en paquetes pre-establecidos que cumplen la misma función. ;"Existen funciones y no hay redundancias en definiciones de funciones, son claras y no ""reinventan la rueda"". ";"Existen funciones y no hay redundancias en definiciones de funciones, son claras y no ""reinventan la rueda"". Además, las funciones definidas en la carpeta functiones tienen documentación interna sencilla (usando docstrings por ejemplo)"
14;Existe la oportunidad de ocupar librerías pre-existentes para eficientar o resumir el código?;Trararon de reinventar la rueda con una función muy básica de un paquete famoso. ;Trararon de reinventar la rueda con una función básica de un paquete conocido en la comunidad. ;Trararon de reinventar la rueda con una función básica de un paquete fácil de encontrar. ;-;No parece haber funciones que puedan reemplazarse fácilmente por funciones pre-existentes.
15;Hace uso de notebooks solo cuando es estrictamente necesario?;El pipeline contiene un notebook, lo que hace que el proceso lance un error al correrlo por consola.;El pipeline contiene un notebook que falla al ejecutar el pipeline, pero no afecta al resultado final.;El pipeline contiene un notebook, pero se ejecuta correctamente por algún arreglo específico que el dueño del proyecto hizo.;El pipeline no contiene notebooks ni similares.;El pipeline no contiene notebooks ni similares. Además, existen reportes o notebooks en las carperas de reports y/o insight.
16;Encontraste alguna contraseña dentro del código?;Sí;-;-;-;No
17;Sin incluir el tiempo requerido para entender el código ni el proyecto: Te tomó menos de 60 minutos ejecutar el código de inicio a fin? ;No, no pude terminar de correrlo en toda la sesión.;No, me tomó más de 2 horas.;No, me tomó más de 1 hora.;Sí, me tomó entre 30 y 60 minutos.;Sí, me tomó menos de 30 minutos.
18;Sentiste que todo estaba explicado para alguien que no conoce absolutamente nada del proyecto?;Para nada. No entendí casi nada;No, hubo varias cosas que no entendí después de reflexionarlas mucho.;Más o menos. Entendí la mayoría bastante rápido, pero tuve muchas dudas importantes;Sí, la mayoría lo entendí bastante rápido porque estaba muy claro.;Absolutamente, no tuve dudas de lo que tenía que hacer y funcionó todo a la primera.
19;Algún(os) comentario(s) que crees que le serviría(n) al dueño de este proyecto para mejorar su proyecto?;-;-;-;-;-
